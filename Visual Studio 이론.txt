Visual Studio  / gdb debugger⚡ 임시 사이트

파일생성법 :: Visual Studio실행-c++ 빈프로젝트-소스파일-우클릭-추가-새항목추가-[프로젝트명].c
 - 소스파일은 하나만 출력가능, 여러개의 파일 생성 시 충돌 할 수 있음
 - 여러개 파일 생성시, 출력 안할 파일 지정가능 : 해당 파일 우클릭-속성-빌드에서 제외-예-저장

- // :: 주석, 코드의 설명을 하는 데에 주로 사용 ex) // 내용입력
        (주석 뒤의 내용은 언어로 인식안함, 단축키 ctrl + shift + / ) 
       /* 여러 줄 주석으로 적용할 
               때에는 사이에 * 입력 */
- # :: "전처리기", 코드 파일의 가장 앞부분에 명시
- <> :: 라이브러리
- ; (세미콜론) :: 온점의 역할, 문장을 끝내는 역할
- ''(작은따옴표)로 감싸진 정보는, 문자형으로 취급한다
- ""(큰따옴표)로 감싸진 정보는, 문자열으로 취급한다(문자열: c언어에서 취급X, 자료형)
- \n, :: 줄 바꿈, "이스케이프 문자" 중 하나이다
- = :: "대입한다"
- & :: 주소연산자
- &num :: 변수 num이 위치한 주소 반환
- 실행(출력) :: ctrl + f5 (콘솔창)

<printf() 함수 원형>
  #include <stdio.h>
     stdio :: standard input and output의 줄임말 (기초적인 입출력)
  int main() {    } :: 메인 함수, {} 안에서 실행할 명령문 작성
  printf() :: 일반적인 문장 출력 ex) printf("Hello");
              변수 또는 특정 값을 출력하는 명령문 작성

<변수 :: "변할 수 있는 숫자", 변하는 정보를 담는 공간>
 - 변수 선언 :: 변수로 사용할 공간 생성 / [자료형(타입)] [변수명];
    ex) int number; (정수형 정보를 담을 수 있고, 이름이 number인 변수를 선언하라.)
        char ascii; (문자형 정보를 담을 수있고, 이름이 ascii인 변수를 선언하라.)
 - 변수 값 설정 :: 변수에 특정 값을 저장 (선언이 완료된 변수만 사용가능)
        [선언된 변수명] = [저장할 값];
    ex) number = 5; (변수 number에 숫자 5라는 정보를 넣어라.)
 - 변수 초기화 :: 변수 선언 + 변수 값 설정 / [자료형(타입)] [변수명] = [저장할 값];
    ex) char ascii = 'A'; 
       (문자형 정보를 담을 수 있고, 
        이름이 ascii인 변수를 생성하면서 이 변수에 'A'라는 값을 저장하라.)

<자료형 :: 정보의 종류 -> 변수에 어떤 종류의 정보를 담을 수 있는지 지정>
- 정수형 :: 소숫점이 없는 숫자 / (대표함수) int, long long int
- 실수형 :: 소숫점이 있는 숫자 / (대표함수) double, float
- 문자형 :: char(캐릭터형) 작은 따옴표로 문자감싸기, 문자 하나만 가능

<변수의값 출력 :: printf("출력할 문장(+서식지정자)", 서식지정자로 전송할 변수 또는 값>
  ex) int num = 312;
      printf("num의 값은 %d입니다.", num); ->num의 값은 312입니다로 출력됨

서식지정자 :: 변수의 값이나 특정 값 불러올 때 사용하는 문자
  ㄴ서식 지정자의 개수와 뒤쪽에 대기하는 값의 개수의 쌍이 맞아야 한다
     ex) printf("a의 값은 %d 이고, b의 값은 %d 이다. \n", a , b );

- %d :: int형의 값을 불러들이는 서식 지정자, 부호 있는 10진 정수(=%i)
- %lld :: long long int형의 값을 불러들이는 서식 지정자
- %lf :: double형의 값을 불러들이는 서식 지정자
- %f :: float형의 값을 불러들이는 서식 지정자(double형 불러들이기 가능)
         " double형은 보통 %lf를 통해 입력받고 %f를 통해 출력한다."
         ㄴ %.숫자f , 원하는 자릿수 만큼 출력 ex) %.2f = 소숫점 2자리까지 출력
- %c :: char형의 값을 불러들이는 서식 지정자

<scanf() 함수 원형> :: scanf()의 "" 안에는, 서식지정자와 공백만 쓸 수 있다
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main() {
int scanf("서식지정자1 서식지정자2 ... ", &변수1, &변수2, ... ); }

int main() {
	int num;  // int형 변수 num 선언
	scanf("%d", &num); // num 값 입력 받기
	   // %d에서 입력받은 값을 사용자가 Enter를 쳤을 때 num으로 전달한다.
	printf("%d", num); // 입력받은 num값 출력하기

<연산자(operator)의 종류>
- 산술연산자(5) :: +, -, *, /(몫 나누기, 정수 또는 실수 모두 가능), %(나머지 나누기, 값은 정수로만 나옴)
- 대입연산자(1) :: = ("대입한다")
- 복합대입연산자(5) :: +=, -=, *=, /=, %=
